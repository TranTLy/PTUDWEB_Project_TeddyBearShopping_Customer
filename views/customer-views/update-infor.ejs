<%include ../components/header%>
<link rel="stylesheet" href="stylesheets/signup.css" />
<link rel="stylesheet" href="stylesheets/forgetpassword.css" />
<form class="form-group from-signup" method="POST" action="update-infor">
  <label id="lable-sign-up" for="sign-up">Thay đổi thông tin cá nhân</label>
  <br />
  <a href="/change-password" id="link-change-password">Thay đổi mật khẩu?</a>
  <br />
  <div style="display: flex; flex-direction: column; text-align: center; align-items: center; width: 100% ">
  <img src="<% if (user!= null) { %>
    <%= user.avatar %> 
       <%}%>"  id="avatar" style="border-radius: 50%" width="120px" height="120px" >
       <button type="button"
       id="btnChooseFile"
         class="btn "
         onclick="document.getElementById('filesToUpload').click();" style="margin-top: 10px"
       >Chọn ảnh</button>
      <input
        name="avatar"
        id="filesToUpload"
        type="file"
        onchange="Upfile()"
        style="display: none"
        accept=".png, .jpg, .jpeg, .gif"
      />
    </div>
    
      <br>
  <div class="label-input-signup ">Họ và tên<span>*</span></div>
  <input
    type="text"
    class="form-control required"
    name="name"
    id="nameUser"
    aria-describedby="helpId"
    required
    value=<% if (user) { %>
         <%=user.name %> 
            <%} else{%> "" <%}%>
            />
  <div class="label-input-signup">Ngày tháng năm sinh<span></span></div>
  <input
    type="date"
    class="form-control"
    name="birthday"
    id="dob"
    aria-describedby="helpId"
    data-date-format="DD MM YYYY"
    value=  <%if (user!= null) { %>
      <%=user.birthday %> 
         <%}%> 
  />

  <div class="label-input-signup">Số điện thoại<span></span></div>
  <input
    type="text"
    class="form-control"
    name="phoneNumber"
    id="phone"
    aria-describedby="helpId"
    value= <%if (user!= null) { %>
      <%=user.phoneNumber %> 
         <%}%> 
           />

  <button id="btn-sign-up" type="submit" onclick="checkInfor()">
    Lưu
  </button>

  <script>
    const checkEmpty = () => {
      const required = document.getElementsByClassName("required");
      Array.from(required)
        .reverse()
        .forEach(item => {
          if (item.value == "") {
            item.focus();
            return false;
          }
        });
      return true;
    };
    const checkInfor = () => {
      alert("ấcdjalsjdlasjd");
      console.log("checl");
      checkEmpty();
      Uploadfile();
    };
    function Uploadfile() {
    const input = document.getElementById("filesToUpload");
   const avatar = document.getElementById("avatar");

    const apiUrl = "https://api.imgur.com/3/image";
    const token = "4262f0ea0613e5e6565050b4c5b7775c78d3722d";
    let settings = {
      async: false,
      crossDomain: true,
      processData: false,
      contentType: false,
      type: "POST",
      url: apiUrl,
      headers: {
        Authorization: "Bearer " + token,
        Accept: "application/json"
      },
      mimeType: "multipart/form-data"
    };
    let formData = new FormData();
    for (let x = 0; x < input.files.length; x++) {
      formData.append("image",  input.files[x]);
      settings.data = formData;
      $.ajax(settings)
        .done(
          res => {
            (input.value = JSON.parse(res).data.link)}
        )
        .fail(err => console.log("err", err));
    }
    console.log("input value", input.value);
    }
    function Upfile() {
    const input = document.getElementById("filesToUpload");
   const avatar = document.getElementById("avatar");

    for (let x = 0; x < input.files.length; x++) {
      var reader = new FileReader();
        reader.onload = function (e) {
    // var img = document.createElement("img");
    //             img.src = e.target.result;

    //             var canvas = document.createElement("canvas");
    //             var ctx = canvas.getContext("2d");
    //             ctx.drawImage(img, 0, 0);

    //             var MAX_WIDTH = 200;
    //             var MAX_HEIGHT = 200;
    //             var width = img.width;
    //             var height = img.height;

    //             if (width > height) {
    //                 if (width > MAX_WIDTH) {
    //                     height *= MAX_WIDTH / width;
    //                     width = MAX_WIDTH;
    //                 }
    //             } else {
    //                 if (height > MAX_HEIGHT) {
    //                     width *= MAX_HEIGHT / height;
    //                     height = MAX_HEIGHT;
    //                 }
    //             }
    //             canvas.width = width;
    //             canvas.height = height;
    //             var ctx = canvas.getContext("2d");
    //             ctx.drawImage(img, 0, 0, width, height);
    //             console.log("ctx",ctx);
    //             dataurl = canvas.toDataURL(input.files[x].type);
    //             console.log("type", input.files[x].type);
    //            console.log("dataa",dataurl);
                // document.getElementById('avatar').src = dataurl;
            $('#avatar').attr('src', e.target.result);
        }
        reader.readAsDataURL(input.files[x]);
  }
  // if (window.File && window.FileReader && window.FileList && window.Blob) {
  //       var filesToUploads = document.getElementById('filesToUpload').files;
  //       var file = filesToUploads[0];
  //       console.log("file",file);
  //       if (file) {

  //           var reader = new FileReader();
  //           // Set the image once loaded into file reader
  //           reader.onload = function(e) {

  //               var img = document.createElement("img");
  //               img.src = e.target.result;

  //               var canvas = document.createElement("canvas");
  //               var ctx = canvas.getContext("2d");
  //               ctx.drawImage(img, 0, 0);

  //               var MAX_WIDTH = 200;
  //               var MAX_HEIGHT = 200;
  //               var width = img.width;
  //               var height = img.height;

  //               if (width > height) {
  //                   if (width > MAX_WIDTH) {
  //                       height *= MAX_WIDTH / width;
  //                       width = MAX_WIDTH;
  //                   }
  //               } else {
  //                   if (height > MAX_HEIGHT) {
  //                       width *= MAX_HEIGHT / height;
  //                       height = MAX_HEIGHT;
  //                   }
  //               }
  //               canvas.width = width;
  //               canvas.height = height;
  //               var ctx = canvas.getContext("2d");
  //               ctx.drawImage(img, 0, 0, width, height);

  //               dataurl = canvas.toDataURL(file.type);
  //               console.log("type", file.type);
  //              console.log("dataa",dataurl);
  //               document.getElementById('avatar').src = dataurl;
  //           }
  //           reader.readAsDataURL(file);

  //       }

  //   } else {
  //       alert('The File APIs are not fully supported in this browser.');
  //   }
    }
  </script>
</form>

<% include ../components/footer%>
